{"componentChunkName":"component---src-templates-course-content-template-js","path":"/part-5/3-service-mesh","result":{"data":{"page":{"htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"text-box","properties":{"variant":"learningObjectives","name":"Learning Objectives"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After this section you can"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Setup a service mesh and use it to monitor network traffic"}]},{"type":"text","value":"\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Very often you'll hear about a concept \"Service Mesh\". Service meshes are quite complex and have a large feature set. During parts 1 to 4 we have implemented a few features that service meshes would have offered out of the box. The following video by Microsoft Developer is an excellent walkthrough of all of the features a service mesh has."}]},{"type":"element","tagName":"iframe","properties":{"width":560,"height":315,"src":"https://www.youtube-nocookie.com/embed/izVWk7rYqWI","frameBorder":"0","allow":"accelerometer; encrypted-media; gyroscope; picture-in-picture","allowFullScreen":true},"children":[]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For incoming and outgoing traffic and for communication between services it can:"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Secure the communication"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Manage traffic"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Monitor traffic, sending logs and metrics to e.g. Prometheus"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So a service mesh is an "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"extremely"}]},{"type":"text","value":" powerful tool. If we started using service mesh like Istio in part 1 we may have been able to skip using traefik, skip some of our DIY monitoring solutions, and achieved canary releases without Argo Rollouts. On the other hand, we did do all that without a service meshes."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's install a service mesh and test the features. Our choice will be "},{"type":"element","tagName":"a","properties":{"href":"https://linkerd.io/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"Linkerd"}]},{"type":"text","value":", mainly because it's lightweight compared to Istio. Once again they have their own CLI tool to help us, follow the "},{"type":"element","tagName":"a","properties":{"href":"https://linkerd.io/2/getting-started/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"getting started"}]},{"type":"text","value":" guide until Step 4."}]},{"type":"element","tagName":"text-box","properties":{"name":"Alternate sources","variant":"hint"},"children":[{"type":"text","value":"\n We are actually simply following through the whole gettings started guide, so you can read through it if you wish.\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's look at our application, this time we'll use this microservice application for voting emojis: "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/BuoyantIO/emojivoto","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"https://github.com/BuoyantIO/emojivoto"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ kubectl apply -f https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/ns.yml \\\n                -f https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/web.yml \\\n                -f https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/emoji.yml \\\n                -f https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/voting.yml \\\n                -f https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/vote-bot.yml\n\n$ kubectl get all -n emojivoto\n  NAME                            READY   STATUS    RESTARTS   AGE\n  pod/web-7bcb54cb8b-cjw7d        1/1     Running   1          3d21h\n  pod/emoji-686f74d889-rcdsh      1/1     Running   1          3d21h\n  pod/vote-bot-74d97c76c6-pcsfl   1/1     Running   1          3d21h\n  pod/voting-56847f699b-2nzqn     1/1     Running   1          3d21h\n\n  NAME                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)             AGE\n  service/web-svc      ClusterIP   10.43.248.111   <none>        80/TCP              3d21h\n  service/emoji-svc    ClusterIP   10.43.110.235   <none>        8080/TCP,8801/TCP   3d21h\n  service/voting-svc   ClusterIP   10.43.111.57    <none>        8080/TCP,8801/TCP   3d21h\n\n  NAME                       READY   UP-TO-DATE   AVAILABLE   AGE\n  deployment.apps/emoji      1/1     1            1           3d21h\n  deployment.apps/vote-bot   1/1     1            1           3d21h\n  deployment.apps/web        1/1     1            1           3d21h\n  deployment.apps/voting     1/1     1            1           3d21h"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here we see the \"vote-bot\" deployment that automatically generates traffic. The README tells us that it votes Donut üç© 15% of the time and the rest randomly."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Since it already has a service we're only missing an ingress."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"ingress.yaml"}]}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"yaml"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"apiVersion"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" networking.k8s.io/v1\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"kind"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Ingress\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"metadata"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" web"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"ingress\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"namespace"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" emojivoto\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"spec"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"rules"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"http"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"paths"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"path"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" /\n        "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"pathType"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Prefix\n        "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"backend"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n          "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"service"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n            "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" web"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"svc\n            "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"port"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n              "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"number"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"80"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"And it becomes available for us in "},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8081","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"http://localhost:8081"}]},{"type":"text","value":". However, there's something strange going on! You can figure it out by watching the leaderboards and knowing where the votes are going, or by clicking every single emoji by yourself."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's see if there's a better way to detect the behavior and figure out what's wrong. Linkerd offers us a dashboard through an extension called "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"viz"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$ linkerd viz install | kubectl apply -f -\n  ...\n\n$ linkerd viz dashboard"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"it should open your browser window. Click the \"emojivoto\" namespace (to reach /namespaces/emojivoto) we'll notice that the resources in emojivoto namespace are not in the service mesh yet. This is due to the fact that they do not have the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"sidecar container"}]},{"type":"text","value":" in the pods. Sidecar containers are a commonly used pattern where a new container is added to the pod to add more functionality to the pod. Let's add Linkerd sidecars to emojivoto."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The state of the pods before:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$ kubectl get po -n emojivoto\n  NAME                        READY   STATUS    RESTARTS   AGE\n  voting-f999bd4d7-r4mct      1/1     Running   0          10m\n  web-79469b946f-ksprv        1/1     Running   0          10m\n  emoji-66ccdb4d86-rhcnf      1/1     Running   0          10m\n  vote-bot-69754c864f-g24jt   1/1     Running   0          10m"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The spell to add linkerd to the deployments and then apply the deployments."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"$¬†kubectl get -n emojivoto deploy -o yaml \\\n    | linkerd inject - \\\n    | kubectl apply -f -"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You can run the rows independently to see what they do. The first, "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"kubectl get -n emojivoto deploy -o yaml"}]},{"type":"text","value":", will output all deployments in emojivoto namespace. The "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"linkerd inject -"}]},{"type":"text","value":" will add an annotation to instruct Linkerd to add the sidecar proxy container. Finally the kubectl apply will apply the modified deployments. Now the pods look like this:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"kubectl get po -n emojivoto\nNAME                        READY   STATUS    RESTARTS   AGE\nvote-bot-6d7677bb68-qxfx9   2/2     Running   0          3m17s\nweb-5f86686c4d-qgxtv        2/2     Running   0          3m17s\nemoji-696d9d8f95-sgzqs      2/2     Running   0          3m17s\nvoting-ff4c54b8d-sf99j      2/2     Running   0          3m18s"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Also, if you now look at the dashboard you'll see a lot more information as the old deployments were replaced by the meshed ones. We also notice that success rate is less than stellar."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Two services have success rate below 100%. As the "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"web"}]},{"type":"text","value":" is most likely just propagating the error from "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"voting"}]},{"type":"text","value":" we can click either of the services and you should quickly see which request is failing."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Service meshes can be powerful tools as they can help you connect and observe your services."}]},{"type":"element","tagName":"exercise","properties":{"name":"Exercise 5.02: Project: Service Mesh Edition"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  Deployments are mostly trivial to move to Linkerd. As we already did with emojivoto you can do with the project"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  Read: "},{"type":"element","tagName":"a","properties":{"href":"https://linkerd.io/2/tasks/adding-your-service/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"https://linkerd.io/2/tasks/adding-your-service/"}]},{"type":"text","value":" and move you project to Linkerd."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  Add the modified manifests (through linkerd inject) to the repository for submission."}]}]},{"type":"element","tagName":"exercise","properties":{"name":"Exercise 5.03: Learn from external material"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  To illustrate how canary releases work in Service Meshes follow through the task here: "},{"type":"element","tagName":"a","properties":{"href":"https://linkerd.io/2/tasks/canary-release/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"https://linkerd.io/2/tasks/canary-release/"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"  During the task note how the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"kubectl -k"}]},{"type":"text","value":" is used with github repository."}]},{"type":"element","tagName":"div","properties":{},"children":[{"type":"text","value":"  Use "},{"type":"element","tagName":"a","properties":{"href":"https://man7.org/linux/man-pages/man1/script.1.html"},"children":[{"type":"text","value":"script"}]},{"type":"text","value":" command during the exercise to have something to submit. Or just take a screenshot at the end."}]}]},{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"quiz","properties":{"id":"5094dd11-8c82-4b61-8083-967a1ea1a409"},"children":[]}]}]},"html":"<div><text-box variant='learningObjectives' name='Learning Objectives'><p>After this section you can</p><ul>\n<li>Setup a service mesh and use it to monitor network traffic</li>\n</ul></text-box><p>Very often you'll hear about a concept \"Service Mesh\". Service meshes are quite complex and have a large feature set. During parts 1 to 4 we have implemented a few features that service meshes would have offered out of the box. The following video by Microsoft Developer is an excellent walkthrough of all of the features a service mesh has.</p><iframe width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/izVWk7rYqWI\" frameborder=\"0\" allow=\"accelerometer; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe><p>For incoming and outgoing traffic and for communication between services it can:</p><ul>\n<li>Secure the communication</li>\n<li>Manage traffic</li>\n<li>Monitor traffic, sending logs and metrics to e.g. Prometheus</li>\n</ul><p>So a service mesh is an <strong>extremely</strong> powerful tool. If we started using service mesh like Istio in part 1 we may have been able to skip using traefik, skip some of our DIY monitoring solutions, and achieved canary releases without Argo Rollouts. On the other hand, we did do all that without a service meshes.</p><p>Let's install a service mesh and test the features. Our choice will be <a href=\"https://linkerd.io/\" target=\"_blank\" rel=\"noopener noreferrer\">Linkerd</a>, mainly because it's lightweight compared to Istio. Once again they have their own CLI tool to help us, follow the <a href=\"https://linkerd.io/2/getting-started/\" target=\"_blank\" rel=\"noopener noreferrer\">getting started</a> guide until Step 4.</p><text-box name=\"Alternate sources\" variant=\"hint\">\n We are actually simply following through the whole gettings started guide, so you can read through it if you wish.\n</text-box><p>Let's look at our application, this time we'll use this microservice application for voting emojis: <a href=\"https://github.com/BuoyantIO/emojivoto\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/BuoyantIO/emojivoto</a>.</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ kubectl apply -f https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/ns.yml \\\n                -f https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/web.yml \\\n                -f https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/emoji.yml \\\n                -f https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/voting.yml \\\n                -f https://raw.githubusercontent.com/BuoyantIO/emojivoto/main/kustomize/deployment/vote-bot.yml\n\n$ kubectl get all -n emojivoto\n  NAME                            READY   STATUS    RESTARTS   AGE\n  pod/web-7bcb54cb8b-cjw7d        1/1     Running   1          3d21h\n  pod/emoji-686f74d889-rcdsh      1/1     Running   1          3d21h\n  pod/vote-bot-74d97c76c6-pcsfl   1/1     Running   1          3d21h\n  pod/voting-56847f699b-2nzqn     1/1     Running   1          3d21h\n\n  NAME                 TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)             AGE\n  service/web-svc      ClusterIP   10.43.248.111   &lt;none&gt;        80/TCP              3d21h\n  service/emoji-svc    ClusterIP   10.43.110.235   &lt;none&gt;        8080/TCP,8801/TCP   3d21h\n  service/voting-svc   ClusterIP   10.43.111.57    &lt;none&gt;        8080/TCP,8801/TCP   3d21h\n\n  NAME                       READY   UP-TO-DATE   AVAILABLE   AGE\n  deployment.apps/emoji      1/1     1            1           3d21h\n  deployment.apps/vote-bot   1/1     1            1           3d21h\n  deployment.apps/web        1/1     1            1           3d21h\n  deployment.apps/voting     1/1     1            1           3d21h</code></pre></div><p>Here we see the \"vote-bot\" deployment that automatically generates traffic. The README tells us that it votes Donut üç© 15% of the time and the rest randomly.</p><p>Since it already has a service we're only missing an ingress.</p><p><strong>ingress.yaml</strong></p><div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Ingress\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> web<span class=\"token punctuation\">-</span>ingress\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> emojivoto\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /\n        <span class=\"token key atrule\">pathType</span><span class=\"token punctuation\">:</span> Prefix\n        <span class=\"token key atrule\">backend</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> web<span class=\"token punctuation\">-</span>svc\n            <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">number</span><span class=\"token punctuation\">:</span> <span class=\"token number\">80</span></code></pre></div><p>And it becomes available for us in <a href=\"http://localhost:8081\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:8081</a>. However, there's something strange going on! You can figure it out by watching the leaderboards and knowing where the votes are going, or by clicking every single emoji by yourself.</p><p>Let's see if there's a better way to detect the behavior and figure out what's wrong. Linkerd offers us a dashboard through an extension called <code class=\"language-text\">viz</code>.</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ linkerd viz install | kubectl apply -f -\n  ...\n\n$ linkerd viz dashboard</code></pre></div><p>it should open your browser window. Click the \"emojivoto\" namespace (to reach /namespaces/emojivoto) we'll notice that the resources in emojivoto namespace are not in the service mesh yet. This is due to the fact that they do not have the <code class=\"language-text\">sidecar container</code> in the pods. Sidecar containers are a commonly used pattern where a new container is added to the pod to add more functionality to the pod. Let's add Linkerd sidecars to emojivoto.</p><p>The state of the pods before:</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ kubectl get po -n emojivoto\n  NAME                        READY   STATUS    RESTARTS   AGE\n  voting-f999bd4d7-r4mct      1/1     Running   0          10m\n  web-79469b946f-ksprv        1/1     Running   0          10m\n  emoji-66ccdb4d86-rhcnf      1/1     Running   0          10m\n  vote-bot-69754c864f-g24jt   1/1     Running   0          10m</code></pre></div><p>The spell to add linkerd to the deployments and then apply the deployments.</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$¬†kubectl get -n emojivoto deploy -o yaml \\\n    | linkerd inject - \\\n    | kubectl apply -f -</code></pre></div><p>You can run the rows independently to see what they do. The first, <code class=\"language-text\">kubectl get -n emojivoto deploy -o yaml</code>, will output all deployments in emojivoto namespace. The <code class=\"language-text\">linkerd inject -</code> will add an annotation to instruct Linkerd to add the sidecar proxy container. Finally the kubectl apply will apply the modified deployments. Now the pods look like this:</p><div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">kubectl get po -n emojivoto\nNAME                        READY   STATUS    RESTARTS   AGE\nvote-bot-6d7677bb68-qxfx9   2/2     Running   0          3m17s\nweb-5f86686c4d-qgxtv        2/2     Running   0          3m17s\nemoji-696d9d8f95-sgzqs      2/2     Running   0          3m17s\nvoting-ff4c54b8d-sf99j      2/2     Running   0          3m18s</code></pre></div><p>Also, if you now look at the dashboard you'll see a lot more information as the old deployments were replaced by the meshed ones. We also notice that success rate is less than stellar.</p><p>Two services have success rate below 100%. As the <em>web</em> is most likely just propagating the error from <em>voting</em> we can click either of the services and you should quickly see which request is failing.</p><p>Service meshes can be powerful tools as they can help you connect and observe your services.</p><exercise name='Exercise 5.02: Project: Service Mesh Edition'><p>  Deployments are mostly trivial to move to Linkerd. As we already did with emojivoto you can do with the project</p><p>  Read: <a href=\"https://linkerd.io/2/tasks/adding-your-service/\" target=\"_blank\" rel=\"noopener noreferrer\">https://linkerd.io/2/tasks/adding-your-service/</a> and move you project to Linkerd.</p><p>  Add the modified manifests (through linkerd inject) to the repository for submission.</p></exercise><exercise name='Exercise 5.03: Learn from external material'><p>  To illustrate how canary releases work in Service Meshes follow through the task here: <a href=\"https://linkerd.io/2/tasks/canary-release/\" target=\"_blank\" rel=\"noopener noreferrer\">https://linkerd.io/2/tasks/canary-release/</a></p><p>  During the task note how the <code class=\"language-text\">kubectl -k</code> is used with github repository.</p><div>  Use <a href=\"https://man7.org/linux/man-pages/man1/script.1.html\">script</a> command during the exercise to have something to submit. Or just take a screenshot at the end.</div></exercise><div><quiz id=\"5094dd11-8c82-4b61-8083-967a1ea1a409\"></quiz></div></div>","frontmatter":{"path":"/part-5/3-service-mesh","title":"Service Mesh"},"fileAbsolutePath":"/Users/matti/dev/kubernetes-hy.github.io/data/part-5/3-service-mesh.md"},"allPages":{"edges":[{"node":{"id":"fdefbfd6-81fe-562b-98e3-ccae193a91e8","frontmatter":{"path":"/known-problems-solutions","title":"Issues you may face"}}},{"node":{"id":"b1c47f2d-76e9-58d8-9a14-2b6132468171","frontmatter":{"path":"/frontmatter-guide","title":"Frontmatter-guide"}}},{"node":{"id":"12166a9a-6e11-5213-94d8-08c3f18bce09","frontmatter":{"path":"/sanasto","title":"Sanasto"}}},{"node":{"id":"44c243fb-0699-52ee-a2b8-95681b80bfe1","frontmatter":{"path":"/part-3/3-gke-features","title":"GKE features"}}},{"node":{"id":"957e10d7-8115-5f62-8d6a-8046d6a83dab","frontmatter":{"path":"/part-3/4-summary","title":"Summary"}}},{"node":{"id":"e873c4f2-48f2-5265-8a29-233223f3a2e1","frontmatter":{"path":"/part-4/3-gitops","title":"GitOps"}}},{"node":{"id":"6d10a184-73f2-50fe-9846-d93c98783482","frontmatter":{"path":"/part-3","title":"Part 3"}}},{"node":{"id":"d6fe4633-2095-505a-9374-d3713aa920fd","frontmatter":{"path":"/part-4/2-messaging-systems","title":"Messaging Systems"}}},{"node":{"id":"ae51dedf-a0ed-56ed-9043-8d4381286dd5","frontmatter":{"path":"/part-4/1-update-strategies-and-prometheus","title":"Update Strategies and Prometheus"}}},{"node":{"id":"e85ff2b4-7f6c-5a7b-9409-b1b5e26c6b02","frontmatter":{"path":"/part-4/4-summary","title":"Summary"}}},{"node":{"id":"2399333a-4e86-5a72-880d-935a3113f024","frontmatter":{"path":"/part-4","title":"Part 4"}}},{"node":{"id":"0e6f20e1-e40e-5550-ac88-a516d2881edb","frontmatter":{"path":"/part-5/3-service-mesh","title":"Service Mesh"}}},{"node":{"id":"943bc3f1-aa37-5a30-8232-b7fe114261c5","frontmatter":{"path":"/part-5/1-kubernetes-internals","title":"Kubernetes Internals"}}},{"node":{"id":"c25696ec-1bd0-521b-8b74-6a6f86514402","frontmatter":{"path":"/part-5/2-custom-resource-definitions","title":"Custom Resource Definitions"}}},{"node":{"id":"da008aad-9b57-5596-b867-815a42284aa3","frontmatter":{"path":"/part-5/4-beyond-kubernetes","title":"Beyond Kubernetes"}}},{"node":{"id":"13493822-b1dd-5402-a880-ce7945761246","frontmatter":{"path":"/part-5","title":"Part 5"}}},{"node":{"id":"b329e1eb-4475-517c-aacc-00490d0d2839","frontmatter":{"path":"/part-1","title":"Part 1"}}},{"node":{"id":"478f0beb-6ceb-5414-ae92-e25793249bc2","frontmatter":{"path":"/part-2/6-summary","title":"Summary"}}},{"node":{"id":"f52cacfb-80fe-5e11-bf42-3655f4dff267","frontmatter":{"path":"/part-2","title":"Part 2"}}},{"node":{"id":"a263867b-5ee2-59a1-b9cc-3ffa8e0b8965","frontmatter":{"path":"/part-0/5-pod","title":"Pod"}}},{"node":{"id":"1cb09917-b0d2-558b-b2f2-86e195b30139","frontmatter":{"path":"/part-0/4-namespace","title":"Namespace"}}},{"node":{"id":"ae65c6ca-f091-5e34-8e08-1a0c32f5e872","frontmatter":{"path":"/part-1/2-introduction-to-debugging","title":"Introduction to Debugging"}}},{"node":{"id":"6510eba0-b261-5617-9467-bdd7c41e3e66","frontmatter":{"path":"/part-1/3-introduction-to-networking","title":"Introduction to Networking"}}},{"node":{"id":"33a50027-b9c0-5adf-ba80-9517be19aa92","frontmatter":{"path":"/part-1/4-introduction-to-storage","title":"Introduction to Storage"}}},{"node":{"id":"77584bf2-b9d2-5000-9c4e-ffae7142b953","frontmatter":{"path":"/part-1/5-summary","title":"Summary"}}},{"node":{"id":"ef8184fe-25fd-55c7-b2b0-89488dbeda0a","frontmatter":{"path":"/part-2/2-organizing-a-cluster","title":"Organizing a cluster"}}},{"node":{"id":"db3d8354-0a0e-5f48-8fc5-2df668241733","frontmatter":{"path":"/part-2/3-configuring-applications","title":"Configuring applications"}}},{"node":{"id":"3b8b3351-9969-5ac2-b5c8-e8c709eb3382","frontmatter":{"path":"/part-2/4-statefulsets-and-jobs","title":"StatefulSets and Jobs"}}},{"node":{"id":"38fa2dd0-5645-562f-8e0b-eff8542c3117","frontmatter":{"path":"/part-2/5-monitoring","title":"Monitoring"}}},{"node":{"id":"c36d04e4-b166-5cd2-97bf-2d83da8e72fe","frontmatter":{"path":"/part-2/1-networking-between-pods","title":"Networking between pods"}}},{"node":{"id":"e5cdb9b5-2610-5e87-8f36-06d38e72bac4","frontmatter":{"path":"/part-3/2-deployment-pipeline","title":"Deployment Pipeline"}}},{"node":{"id":"24e8849f-09ad-5dc0-ada7-9ee5278ef27b","frontmatter":{"path":"/part-0","title":"Part 0"}}},{"node":{"id":"0521f0d3-f635-5905-a983-8a5d07967c76","frontmatter":{"path":"/part-0/1-kubernetes","title":"Kubernetes"}}},{"node":{"id":"8467a6ee-a4e0-5f79-92f4-8876c9a97f5d","frontmatter":{"path":"/part-0/2-kubectl-config","title":"kubectl config"}}},{"node":{"id":"13dd60c3-9be6-5a4b-ae4f-116e6dcffdb1","frontmatter":{"path":"/part-0/3-kubectl-basics","title":"kubectl basics"}}},{"node":{"id":"f2603f2a-7d1c-577c-b6ef-cff715589ff2","frontmatter":{"path":"/part-1/1-first-deploy","title":"First Deploy"}}},{"node":{"id":"9d9ca5cf-d405-50f5-b561-f857d2a77c76","frontmatter":{"path":"/","title":"Homepage"}}}]}},"pageContext":{}},"staticQueryHashes":["3294351120","994120085"]}