{"componentChunkName":"component---src-templates-course-content-template-js","path":"/part-1/3-introduction-to-networking","result":{"data":{"page":{"htmlAst":{"type":"element","tagName":"div","properties":{},"children":[{"type":"element","tagName":"text-box","properties":{"variant":"learningObjectives","name":"Learning Objectives"},"children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After this section you"}]},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"are able to use Services to access applications from outside of the cluster"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"are able to use Ingresses to access applications from outside of the cluster"}]},{"type":"text","value":"\n"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now back to development! Restarting and following logs has been a treat. Next, we'll open an endpoint to the application and access it via HTTP."}]},{"type":"element","tagName":"h4","properties":{"id":"simple-networking-application","style":"position:relative;"},"children":[{"type":"text","value":"Simple networking application"},{"type":"element","tagName":"a","properties":{"href":"#simple-networking-application","ariaLabel":"simple networking application permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Let's develop our application so that it has an HTTP server responding with two hashes: a hash that is stored until the process is exited and a hash that is request specific. The response body can be something like \"Application abc123. Request 94k9m2\". Choose any port to listen to."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I've prepared one "},{"type":"element","tagName":"a","properties":{"href":"https://github.com/kubernetes-hy/material-example/tree/master/app2","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"here"}]},{"type":"text","value":". By default, it will listen on port 3000."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ kubectl apply -f https://raw.githubusercontent.com/kubernetes-hy/material-example/master/app2/manifests/deployment.yaml\n  deployment.apps/hashresponse-dep created"}]}]}]},{"type":"element","tagName":"h3","properties":{"id":"connecting-from-outside-of-the-cluster","style":"position:relative;"},"children":[{"type":"text","value":"Connecting from outside of the cluster"},{"type":"element","tagName":"a","properties":{"href":"#connecting-from-outside-of-the-cluster","ariaLabel":"connecting from outside of the cluster permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can confirm that the hashresponse-dep is working with the "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"port-forward"}]},{"type":"text","value":" command. Let's see the name of the pod first and then port forward there:"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ kubectl get po\n  NAME                                READY   STATUS    RESTARTS   AGE\n  hashgenerator-dep-5cbbf97d5-z2ct9   1/1     Running   0          20h\n  hashresponse-dep-57bcc888d7-dj5vk   1/1     Running   0          19h\n\n$ kubectl port-forward hashresponse-dep-57bcc888d7-dj5vk 3003:3000\n  Forwarding from 127.0.0.1:3003 -> 3000\n  Forwarding from [::1]:3003 -> 3000"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Now we can view the response from "},{"type":"element","tagName":"a","properties":{"href":"http://localhost:3003","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"http://localhost:3003"}]},{"type":"text","value":" and confirm that it is working as expected."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"TODO: lens port forward"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"External connections with docker used the flag -p "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"-p 3003:3000"}]},{"type":"text","value":" or in docker-compose ports declaration. Unfortunately, Kubernetes isn't as simple. We're going to use either a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Service"}]},{"type":"text","value":" resource or an "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Ingress"}]},{"type":"text","value":" resource."}]},{"type":"element","tagName":"h4","properties":{"id":"what-is-a-service","style":"position:relative;"},"children":[{"type":"text","value":"What is a Service?"},{"type":"element","tagName":"a","properties":{"href":"#what-is-a-service","ariaLabel":"what is a service permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Deployment"}]},{"type":"text","value":" resources took care of deployments for us. "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Service"}]},{"type":"text","value":" resource will take care of serving the application to connections from outside of the cluster."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Create a file service.yaml into the manifests folder and we need the service to do the following things:"}]},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Declare that we want a Service"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Declare which port to listen to"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Declare the application where the request should be directed to"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Declare the port where the request should be directed to"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This translates into a yaml file with contents"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"service.yaml"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"TODO: no nodeport"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"yaml"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"apiVersion"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" v1\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"kind"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Service\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"metadata"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" hashresponse"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"svc\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"spec"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"type"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" NodePort\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"selector"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"app"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" hashresponse "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# This is the app as declared in the deployment."}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"ports"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" http\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"nodePort"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"30080"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# This is the port that is available outside. Value for nodePort can be between 30000-32767"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"protocol"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" TCP\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"port"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"1234"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# This is a port that is available to the cluster, in this case it can be ~ anything"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"targetPort"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"3000"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","comment"]},"children":[{"type":"text","value":"# This is the target port"}]}]}]}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ kubectl apply -f manifests/service.yaml\n  service/hashresponse-svc created"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As we've published 8082 as 30080 we can access it now via "},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8082","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"http://localhost:8082"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We've now defined a nodeport with "},{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"type: NodePort"}]},{"type":"text","value":". "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"NodePorts"}]},{"type":"text","value":" simply ports that are opened by Kubernetes to "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"all of the nodes"}]},{"type":"text","value":" and the service will handle requests in that port. NodePorts are not flexible and require you to assign a different port for every application. As such NodePorts are not used in production but are helpful to know about."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"What we'd want to use instead of NodePort would be a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"LoadBalancer"}]},{"type":"text","value":" type service but this \"only\" works with cloud providers as it configures a, possibly costly, load balancer for it. We'll get to know them in part 3."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There's one additional resource that will help us with serving the application, "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Ingress"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"h4","properties":{"id":"what-is-an-ingress","style":"position:relative;"},"children":[{"type":"text","value":"What is an Ingress?"},{"type":"element","tagName":"a","properties":{"href":"#what-is-an-ingress","ariaLabel":"what is an ingress permalink","className":["anchor","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Incoming Network Access resource "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Ingress"}]},{"type":"text","value":" is a completely different type of resource from "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Services"}]},{"type":"text","value":". If you've got your OSI model memorized, it works in layer 7 while services work on layer 4. You could see these used together: first the aforementioned "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"LoadBalancer"}]},{"type":"text","value":" and then Ingress to handle routing. In our case, as we don't have a load balancer available we can use the Ingress as the first stop. If you're familiar with reverse proxies like Nginx, Ingress should seem familiar."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Ingresses are implemented by various different \"controllers\". This means that ingresses do not automatically work in a cluster, but gives you the freedom of choosing which ingress controller works for you the best. K3s has "},{"type":"element","tagName":"a","properties":{"href":"https://containo.us/traefik/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"Traefik"}]},{"type":"text","value":" installed already. Other options include Istio and Nginx Ingress Controller, "},{"type":"element","tagName":"a","properties":{"href":"https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"more here"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Switching to Ingress will require us to create an Ingress resource. Ingress will route incoming traffic forward to a "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Services"}]},{"type":"text","value":", but the old "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"NodePort"}]},{"type":"text","value":" Service won't do."}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ kubectl delete -f manifests/service.yaml\n  service \"hashresponse-svc\" deleted"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A ClusterIP type Service resource gives the Service an internal IP that'll be accessible in the cluster."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The following will let TCP traffic from port 2345 to port 3000."}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"service.yaml"}]}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"yaml"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"apiVersion"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" v1\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"kind"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Service\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"metadata"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" hashresponse"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"svc\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"spec"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"type"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" ClusterIP\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"selector"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"app"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" hashresponse\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"ports"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n    "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"port"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2345"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"protocol"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" TCP\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"targetPort"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"3000"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For resource 2 the new "},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"Ingress"}]},{"type":"text","value":"."}]},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Declare that it should be an Ingress"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"And route all traffic to our service"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"ingress.yaml"}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"TODO: tarvii annotoida aws?\nTODO: toimiiko tämä global ingress, entä host?"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"yaml"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-yaml"]},"children":[{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"apiVersion"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" networking.k8s.io/v1\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"kind"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Ingress\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"metadata"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" dwk"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"material"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"ingress\n"},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"spec"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"rules"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n  "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"http"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"paths"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n      "},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"path"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" /\n        "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"pathType"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" Prefix\n        "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"backend"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n          "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"service"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n            "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"name"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" hashresponse"},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":"-"}]},{"type":"text","value":"svc\n            "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"port"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":"\n              "},{"type":"element","tagName":"span","properties":{"className":["token","key","atrule"]},"children":[{"type":"text","value":"number"}]},{"type":"element","tagName":"span","properties":{"className":["token","punctuation"]},"children":[{"type":"text","value":":"}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["token","number"]},"children":[{"type":"text","value":"2345"}]}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Then we can apply everything and view the result"}]},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"console"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-console"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-console"]},"children":[{"type":"text","value":"$ kubectl apply -f manifests/\n  ingress.networking.k8s.io/dwk-material-ingress created\n  service/hashresponse-svc configured\n\n$ kubectl get svc,ing\n  NAME                       TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE\n  service/kubernetes         ClusterIP   10.43.0.1    <none>        443/TCP    5m22s\n  service/hashresponse-svc   ClusterIP   10.43.0.61   <none>        2345/TCP   45s\n\n  NAME                                             CLASS    HOSTS   ADDRESS                            PORTS   AGE\n  ingress.networking.k8s.io/dwk-material-ingress   <none>   *       172.21.0.3,172.21.0.4,172.21.0.5   80      16s"}]}]}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We can see that the ingress is listening on port 80. As we already opened port there we can access the application on "},{"type":"element","tagName":"a","properties":{"href":"http://localhost:8081","target":"_blank","rel":["noopener","noreferrer"]},"children":[{"type":"text","value":"http://localhost:8081"}]},{"type":"text","value":"."}]}]},"html":"<div><text-box variant='learningObjectives' name='Learning Objectives'><p>After this section you</p><ul>\n<li>are able to use Services to access applications from outside of the cluster</li>\n<li>are able to use Ingresses to access applications from outside of the cluster</li>\n</ul></text-box><p>Now back to development! Restarting and following logs has been a treat. Next, we'll open an endpoint to the application and access it via HTTP.</p><h4 id=\"simple-networking-application\" style=\"position:relative;\">Simple networking application<a href=\"#simple-networking-application\" aria-label=\"simple networking application permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4><p>Let's develop our application so that it has an HTTP server responding with two hashes: a hash that is stored until the process is exited and a hash that is request specific. The response body can be something like \"Application abc123. Request 94k9m2\". Choose any port to listen to.</p><p>I've prepared one <a href=\"https://github.com/kubernetes-hy/material-example/tree/master/app2\" target=\"_blank\" rel=\"noopener noreferrer\">here</a>. By default, it will listen on port 3000.</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ kubectl apply -f https://raw.githubusercontent.com/kubernetes-hy/material-example/master/app2/manifests/deployment.yaml\n  deployment.apps/hashresponse-dep created</code></pre></div><h3 id=\"connecting-from-outside-of-the-cluster\" style=\"position:relative;\">Connecting from outside of the cluster<a href=\"#connecting-from-outside-of-the-cluster\" aria-label=\"connecting from outside of the cluster permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3><p>We can confirm that the hashresponse-dep is working with the <code class=\"language-text\">port-forward</code> command. Let's see the name of the pod first and then port forward there:</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ kubectl get po\n  NAME                                READY   STATUS    RESTARTS   AGE\n  hashgenerator-dep-5cbbf97d5-z2ct9   1/1     Running   0          20h\n  hashresponse-dep-57bcc888d7-dj5vk   1/1     Running   0          19h\n\n$ kubectl port-forward hashresponse-dep-57bcc888d7-dj5vk 3003:3000\n  Forwarding from 127.0.0.1:3003 -&gt; 3000\n  Forwarding from [::1]:3003 -&gt; 3000</code></pre></div><p>Now we can view the response from <a href=\"http://localhost:3003\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:3003</a> and confirm that it is working as expected.</p><p>TODO: lens port forward</p><p>External connections with docker used the flag -p <code class=\"language-text\">-p 3003:3000</code> or in docker-compose ports declaration. Unfortunately, Kubernetes isn't as simple. We're going to use either a <em>Service</em> resource or an <em>Ingress</em> resource.</p><h4 id=\"what-is-a-service\" style=\"position:relative;\">What is a Service?<a href=\"#what-is-a-service\" aria-label=\"what is a service permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4><p>As <em>Deployment</em> resources took care of deployments for us. <em>Service</em> resource will take care of serving the application to connections from outside of the cluster.</p><p>Create a file service.yaml into the manifests folder and we need the service to do the following things:</p><ol>\n<li>Declare that we want a Service</li>\n<li>Declare which port to listen to</li>\n<li>Declare the application where the request should be directed to</li>\n<li>Declare the port where the request should be directed to</li>\n</ol><p>This translates into a yaml file with contents</p><p><strong>service.yaml</strong></p><p>TODO: no nodeport</p><div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> hashresponse<span class=\"token punctuation\">-</span>svc\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> NodePort\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> hashresponse <span class=\"token comment\"># This is the app as declared in the deployment.</span>\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> http\n      <span class=\"token key atrule\">nodePort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">30080</span> <span class=\"token comment\"># This is the port that is available outside. Value for nodePort can be between 30000-32767</span>\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">1234</span> <span class=\"token comment\"># This is a port that is available to the cluster, in this case it can be ~ anything</span>\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span> <span class=\"token comment\"># This is the target port</span></code></pre></div><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ kubectl apply -f manifests/service.yaml\n  service/hashresponse-svc created</code></pre></div><p>As we've published 8082 as 30080 we can access it now via <a href=\"http://localhost:8082\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:8082</a>.</p><p>We've now defined a nodeport with <code class=\"language-text\">type: NodePort</code>. <em>NodePorts</em> simply ports that are opened by Kubernetes to <strong>all of the nodes</strong> and the service will handle requests in that port. NodePorts are not flexible and require you to assign a different port for every application. As such NodePorts are not used in production but are helpful to know about.</p><p>What we'd want to use instead of NodePort would be a <em>LoadBalancer</em> type service but this \"only\" works with cloud providers as it configures a, possibly costly, load balancer for it. We'll get to know them in part 3.</p><p>There's one additional resource that will help us with serving the application, <em>Ingress</em>.</p><h4 id=\"what-is-an-ingress\" style=\"position:relative;\">What is an Ingress?<a href=\"#what-is-an-ingress\" aria-label=\"what is an ingress permalink\" class=\"anchor after\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4><p>Incoming Network Access resource <em>Ingress</em> is a completely different type of resource from <em>Services</em>. If you've got your OSI model memorized, it works in layer 7 while services work on layer 4. You could see these used together: first the aforementioned <em>LoadBalancer</em> and then Ingress to handle routing. In our case, as we don't have a load balancer available we can use the Ingress as the first stop. If you're familiar with reverse proxies like Nginx, Ingress should seem familiar.</p><p>Ingresses are implemented by various different \"controllers\". This means that ingresses do not automatically work in a cluster, but gives you the freedom of choosing which ingress controller works for you the best. K3s has <a href=\"https://containo.us/traefik/\" target=\"_blank\" rel=\"noopener noreferrer\">Traefik</a> installed already. Other options include Istio and Nginx Ingress Controller, <a href=\"https://kubernetes.io/docs/concepts/services-networking/ingress-controllers/\" target=\"_blank\" rel=\"noopener noreferrer\">more here</a>.</p><p>Switching to Ingress will require us to create an Ingress resource. Ingress will route incoming traffic forward to a <em>Services</em>, but the old <em>NodePort</em> Service won't do.</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ kubectl delete -f manifests/service.yaml\n  service &quot;hashresponse-svc&quot; deleted</code></pre></div><p>A ClusterIP type Service resource gives the Service an internal IP that'll be accessible in the cluster.</p><p>The following will let TCP traffic from port 2345 to port 3000.</p><p><strong>service.yaml</strong></p><div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Service\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> hashresponse<span class=\"token punctuation\">-</span>svc\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> ClusterIP\n  <span class=\"token key atrule\">selector</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">app</span><span class=\"token punctuation\">:</span> hashresponse\n  <span class=\"token key atrule\">ports</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2345</span>\n      <span class=\"token key atrule\">protocol</span><span class=\"token punctuation\">:</span> TCP\n      <span class=\"token key atrule\">targetPort</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span></code></pre></div><p>For resource 2 the new <em>Ingress</em>.</p><ol>\n<li>Declare that it should be an Ingress</li>\n<li>And route all traffic to our service</li>\n</ol><p><strong>ingress.yaml</strong></p><p>TODO: tarvii annotoida aws?\nTODO: toimiiko tämä global ingress, entä host?</p><div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> networking.k8s.io/v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Ingress\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> dwk<span class=\"token punctuation\">-</span>material<span class=\"token punctuation\">-</span>ingress\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">http</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> /\n        <span class=\"token key atrule\">pathType</span><span class=\"token punctuation\">:</span> Prefix\n        <span class=\"token key atrule\">backend</span><span class=\"token punctuation\">:</span>\n          <span class=\"token key atrule\">service</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> hashresponse<span class=\"token punctuation\">-</span>svc\n            <span class=\"token key atrule\">port</span><span class=\"token punctuation\">:</span>\n              <span class=\"token key atrule\">number</span><span class=\"token punctuation\">:</span> <span class=\"token number\">2345</span></code></pre></div><p>Then we can apply everything and view the result</p><div class=\"gatsby-highlight\" data-language=\"console\"><pre class=\"language-console\"><code class=\"language-console\">$ kubectl apply -f manifests/\n  ingress.networking.k8s.io/dwk-material-ingress created\n  service/hashresponse-svc configured\n\n$ kubectl get svc,ing\n  NAME                       TYPE        CLUSTER-IP   EXTERNAL-IP   PORT(S)    AGE\n  service/kubernetes         ClusterIP   10.43.0.1    &lt;none&gt;        443/TCP    5m22s\n  service/hashresponse-svc   ClusterIP   10.43.0.61   &lt;none&gt;        2345/TCP   45s\n\n  NAME                                             CLASS    HOSTS   ADDRESS                            PORTS   AGE\n  ingress.networking.k8s.io/dwk-material-ingress   &lt;none&gt;   *       172.21.0.3,172.21.0.4,172.21.0.5   80      16s</code></pre></div><p>We can see that the ingress is listening on port 80. As we already opened port there we can access the application on <a href=\"http://localhost:8081\" target=\"_blank\" rel=\"noopener noreferrer\">http://localhost:8081</a>.</p></div>","frontmatter":{"path":"/part-1/3-introduction-to-networking","title":"Introduction to Networking"},"fileAbsolutePath":"/Users/matti/dev/kubernetes-hy.github.io/data/part-1/3-introduction-to-networking.md"},"allPages":{"edges":[{"node":{"id":"fdefbfd6-81fe-562b-98e3-ccae193a91e8","frontmatter":{"path":"/known-problems-solutions","title":"Issues you may face"}}},{"node":{"id":"b1c47f2d-76e9-58d8-9a14-2b6132468171","frontmatter":{"path":"/frontmatter-guide","title":"Frontmatter-guide"}}},{"node":{"id":"12166a9a-6e11-5213-94d8-08c3f18bce09","frontmatter":{"path":"/sanasto","title":"Sanasto"}}},{"node":{"id":"44c243fb-0699-52ee-a2b8-95681b80bfe1","frontmatter":{"path":"/part-3/3-gke-features","title":"GKE features"}}},{"node":{"id":"957e10d7-8115-5f62-8d6a-8046d6a83dab","frontmatter":{"path":"/part-3/4-summary","title":"Summary"}}},{"node":{"id":"e873c4f2-48f2-5265-8a29-233223f3a2e1","frontmatter":{"path":"/part-4/3-gitops","title":"GitOps"}}},{"node":{"id":"6d10a184-73f2-50fe-9846-d93c98783482","frontmatter":{"path":"/part-3","title":"Part 3"}}},{"node":{"id":"d6fe4633-2095-505a-9374-d3713aa920fd","frontmatter":{"path":"/part-4/2-messaging-systems","title":"Messaging Systems"}}},{"node":{"id":"ae51dedf-a0ed-56ed-9043-8d4381286dd5","frontmatter":{"path":"/part-4/1-update-strategies-and-prometheus","title":"Update Strategies and Prometheus"}}},{"node":{"id":"e85ff2b4-7f6c-5a7b-9409-b1b5e26c6b02","frontmatter":{"path":"/part-4/4-summary","title":"Summary"}}},{"node":{"id":"2399333a-4e86-5a72-880d-935a3113f024","frontmatter":{"path":"/part-4","title":"Part 4"}}},{"node":{"id":"0e6f20e1-e40e-5550-ac88-a516d2881edb","frontmatter":{"path":"/part-5/3-service-mesh","title":"Service Mesh"}}},{"node":{"id":"943bc3f1-aa37-5a30-8232-b7fe114261c5","frontmatter":{"path":"/part-5/1-kubernetes-internals","title":"Kubernetes Internals"}}},{"node":{"id":"c25696ec-1bd0-521b-8b74-6a6f86514402","frontmatter":{"path":"/part-5/2-custom-resource-definitions","title":"Custom Resource Definitions"}}},{"node":{"id":"da008aad-9b57-5596-b867-815a42284aa3","frontmatter":{"path":"/part-5/4-beyond-kubernetes","title":"Beyond Kubernetes"}}},{"node":{"id":"13493822-b1dd-5402-a880-ce7945761246","frontmatter":{"path":"/part-5","title":"Part 5"}}},{"node":{"id":"b329e1eb-4475-517c-aacc-00490d0d2839","frontmatter":{"path":"/part-1","title":"Part 1"}}},{"node":{"id":"478f0beb-6ceb-5414-ae92-e25793249bc2","frontmatter":{"path":"/part-2/6-summary","title":"Summary"}}},{"node":{"id":"f52cacfb-80fe-5e11-bf42-3655f4dff267","frontmatter":{"path":"/part-2","title":"Part 2"}}},{"node":{"id":"a263867b-5ee2-59a1-b9cc-3ffa8e0b8965","frontmatter":{"path":"/part-0/5-pod","title":"Pod"}}},{"node":{"id":"1cb09917-b0d2-558b-b2f2-86e195b30139","frontmatter":{"path":"/part-0/4-namespace","title":"Namespace"}}},{"node":{"id":"ae65c6ca-f091-5e34-8e08-1a0c32f5e872","frontmatter":{"path":"/part-1/2-introduction-to-debugging","title":"Introduction to Debugging"}}},{"node":{"id":"6510eba0-b261-5617-9467-bdd7c41e3e66","frontmatter":{"path":"/part-1/3-introduction-to-networking","title":"Introduction to Networking"}}},{"node":{"id":"33a50027-b9c0-5adf-ba80-9517be19aa92","frontmatter":{"path":"/part-1/4-introduction-to-storage","title":"Introduction to Storage"}}},{"node":{"id":"77584bf2-b9d2-5000-9c4e-ffae7142b953","frontmatter":{"path":"/part-1/5-summary","title":"Summary"}}},{"node":{"id":"ef8184fe-25fd-55c7-b2b0-89488dbeda0a","frontmatter":{"path":"/part-2/2-organizing-a-cluster","title":"Organizing a cluster"}}},{"node":{"id":"db3d8354-0a0e-5f48-8fc5-2df668241733","frontmatter":{"path":"/part-2/3-configuring-applications","title":"Configuring applications"}}},{"node":{"id":"3b8b3351-9969-5ac2-b5c8-e8c709eb3382","frontmatter":{"path":"/part-2/4-statefulsets-and-jobs","title":"StatefulSets and Jobs"}}},{"node":{"id":"38fa2dd0-5645-562f-8e0b-eff8542c3117","frontmatter":{"path":"/part-2/5-monitoring","title":"Monitoring"}}},{"node":{"id":"c36d04e4-b166-5cd2-97bf-2d83da8e72fe","frontmatter":{"path":"/part-2/1-networking-between-pods","title":"Networking between pods"}}},{"node":{"id":"e5cdb9b5-2610-5e87-8f36-06d38e72bac4","frontmatter":{"path":"/part-3/2-deployment-pipeline","title":"Deployment Pipeline"}}},{"node":{"id":"24e8849f-09ad-5dc0-ada7-9ee5278ef27b","frontmatter":{"path":"/part-0","title":"Part 0"}}},{"node":{"id":"0521f0d3-f635-5905-a983-8a5d07967c76","frontmatter":{"path":"/part-0/1-kubernetes","title":"Kubernetes"}}},{"node":{"id":"8467a6ee-a4e0-5f79-92f4-8876c9a97f5d","frontmatter":{"path":"/part-0/2-kubectl-config","title":"kubectl config"}}},{"node":{"id":"13dd60c3-9be6-5a4b-ae4f-116e6dcffdb1","frontmatter":{"path":"/part-0/3-kubectl-basics","title":"kubectl basics"}}},{"node":{"id":"f2603f2a-7d1c-577c-b6ef-cff715589ff2","frontmatter":{"path":"/part-1/1-first-deploy","title":"First Deploy"}}},{"node":{"id":"9d9ca5cf-d405-50f5-b561-f857d2a77c76","frontmatter":{"path":"/","title":"Homepage"}}}]}},"pageContext":{}},"staticQueryHashes":["3294351120","994120085"]}